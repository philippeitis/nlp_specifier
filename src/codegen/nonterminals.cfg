# Specification root
S -> MRET | RETIF | HASSERT | QASSERT | SIDE | ASSIGN

## Wrapping default POS tokens for more general parsing
# Noun with arbitrarily many adjectives
MNN -> NN | NNS | NNP | NNPS | JJ MNN | VBN MNN
# Adjective with optional determinant
TJJ -> DT_Q JJ | DT_Q JJR | DT_Q JJS
# Adjective with modifier
MJJ -> RB_Q JJ | RB_Q JJR | RB_Q JJS
# Verb with modifier
MVB -> RB_Q VB | RB_Q VBZ | RB_Q VBP | RB_Q VBN | RB_Q VBG | RB_Q VBD
# If and only if
IFF -> IF CC RB IF
# than or equal to (eg. greater EQTO)
EQTO -> IN CC JJ IN

## Operations
# Modified boolean operation (bitwise/logical  and / or)
BITOP -> JJ CC | NN CC
# Arithmetic operation
ARITHOP -> ARITH IN_Q
# Shift operation
SHIFTOP -> SHIFT IN DT NN IN | JJ SHIFT
# Any operation
OP -> BITOP | ARITHOP | SHIFTOP

# Objects
OBJ -> PRP | DT_Q MNN | CODE | DT_Q LIT | OBJ OP OBJ | STR | CHAR | DT VBG MNN | PROP_OF OBJ

## Object relationships
# Relationship to object
# less than object, less than or equal to object, is object, is less than a or b
REL -> TJJ IN OBJ | TJJ EQTO OBJ | IN OBJ | REL CC OBJ
# Modified relationship
# not less than object
MREL -> RB_Q REL
# is adjective, is relation, is a literal (eg. ==)
# eg. (Object) is something, (Object) is less than something, (Object) occurred
PROP -> MVB MJJ | MVB MREL | MVB OBJ | MVB | MVB RANGEMOD
# A property of an item
# A value of
PROP_OF -> DT MNN IN DT | DT MNN IN | DT MJJ IN | DT MJJ IN DT

## Ranges
# Range separator, between range start and range end
# between a AND b, from a TO b
RSEP -> CC | IN | TO
# Range
# OBJECT from START to END, from START to END, up to END
RANGE -> OBJ IN OBJ RSEP OBJ | IN OBJ RSEP OBJ | IN IN OBJ
# Range with or without modifier - eg. exclusive or inclusive of range end
RANGEMOD -> RANGE | RANGE COMMA_Q JJ

# Object is something, object 1 and object 2 are something
ASSERT -> OBJ PROP | OBJ CC ASSERT
# Object must be something, object 1 and object 2 must be something
HASSERT -> OBJ MD PROP | OBJ CC HASSERT
# For some object
QUANT -> FOR DT OBJ
# Quantifier, or quantifier with range, or quantifier with additional modifiers
# For all objects in range, For all objects, For all objects in range and with some property
QUANT_EXPR -> QUANT RANGEMOD_Q | QUANT_EXPR COMMA_Q CC MREL | QUANT_EXPR COMMA_Q MREL
# Quantifier, with assertion over items
# For all items in range, some expression must be true
QASSERT -> QUANT_EXPR COMMA_Q HASSERT | HASSERT QUANT_EXPR | CODE QUANT_EXPR

## Return operations
# Return object
MRET -> RET OBJ | OBJ VBZ RET | OBJ RET
# Items which represent boolean condition
BOOL_EXPR -> ASSERT | QASSERT | CODE | EVENT
# If or IFF boolean is true
COND -> IF BOOL_EXPR | IFF BOOL_EXPR
# Return obj if condition is satisfied
# Return object if condition
RETIF -> MRET COND | COND COMMA MRET | RETIF COMMA RB RETIF | RETIF COMMA RB OBJ | MRET COMMA MRET COND


## Side effects
#       object is verbed to object | object verbed | object is verbed | obj is right shifted by n | Prints {some item} from source (and returns)
SIDE -> OBJ VBZ MVB IN OBJ | OBJ VBZ MVB | OBJ VBZ MJJ MVB IN OBJ | VBZ TJJ OBJ IN OBJ CC MRET
ASSIGN -> VBZ OBJ IN OBJ | VBZ OBJ TO OBJ | VBZ OBJ

EVENT -> MNN VBD
# Object verbed - eg. `a` is negated, `a`
OBJV -> OBJ VBZ_Q MVB
