# Specification root
S -> MRET | RETIF | HASSERT | QASSERT
# | SIDE | FNCALL | ASSIGN

## Wrapping default POS tokens for more general parsing
# Noun with arbitrarily many adjectives
MNN -> NN | NNS | NNP | NNPS | JJ MNN | VBN MNN
# Adjective with optional determinant
TJJ -> DT JJ | DT JJR | JJ | JJR | DT JJS | JJS
# Adjective with modifier
MJJ -> RB JJ | JJ | RB JJR | JJR | RB JJS | JJS
# Verb with modifier
MVB -> RB VB | VB | RB VBZ | VBZ | RB VBP | VBP | RB VBN | VBN | RB VBG | VBG | RB VBD | VBD
# If and only if
IFF -> IF CC RB IF
# than or equal to (eg. greater EQTO)
EQTO -> IN CC JJ IN

## Operations
# Modified boolean operation (bitwise/logical  and / or)
BITOP -> JJ CC | NN CC
# Arithmetic operation
ARITHOP -> ARITH IN | ARITH
# Shift operation
SHIFTOP -> SHIFT IN DT NN IN | JJ SHIFT
# Any operation
OP -> BITOP | ARITHOP | SHIFTOP

# Objects
OBJ -> PRP | DT MNN | MNN | CODE | LIT | DT LIT | OBJ OP OBJ | STR | CHAR | DT VBG MNN | PROP_OF OBJ
#  FNCALL | DT FNCALL |
## Object relationships
# Relationship to object
# less than object, less than or equal to object, is object, is less than a or b
REL -> TJJ IN OBJ | TJJ EQTO OBJ | IN OBJ | REL CC OBJ
# Modified relationship
# not less than object
MREL -> RB REL | REL
# is adjective, is relation, is a literal (eg. ==)
# eg. (Object) is something, (Object) is less than something, (Object) occurred
PROP -> MVB MJJ | MVB MREL | MVB OBJ | MVB | MVB RANGEMOD
# A property of an item
# A value of
PROP_OF -> DT MNN IN DT | DT MNN IN | DT MJJ IN | DT MJJ IN DT

## Ranges
# Range separator, between range start and range end
# between a AND b, from a TO b
RSEP -> CC | IN | TO
# Range
# OBJECT from START to END, from START to END, up to END
RANGE -> OBJ IN OBJ RSEP OBJ | IN OBJ RSEP OBJ | IN IN OBJ
# Range with or without modifier - eg. exclusive or inclusive of range end
RANGEMOD -> RANGE | RANGE COMMA JJ | RANGE JJ

# Object is something, object 1 and object 2 are something
ASSERT -> OBJ PROP | OBJ CC ASSERT
# Object must be something, object 1 and object 2 must be something
HASSERT -> OBJ MD PROP | OBJ CC HASSERT
# For some object
QUANT -> FOR DT OBJ
# Quantifier, or quantifier with range, or quantifier with additional modifiers
# For all objects in range, For all objects, For all objects in range and with some property
QUANT_EXPR -> QUANT | QUANT RANGEMOD | QUANT_EXPR COMMA CC MREL | QUANT_EXPR COMMA MREL | QUANT_EXPR CC MREL | QUANT_EXPR MREL
# Quantifier, with assertion over items
# For all items in range, some expression must be true
QASSERT -> QUANT_EXPR COMMA HASSERT | QUANT_EXPR HASSERT | HASSERT QUANT_EXPR | CODE QUANT_EXPR

## Return operations
# Return object
MRET -> RET OBJ | OBJ VBZ RET | OBJ RET
# Items which represent boolean condition
BOOL_EXPR -> ASSERT | QASSERT | CODE | EVENT
# FNCALL
# If or IFF boolean is true
COND -> IF BOOL_EXPR | IFF BOOL_EXPR
# Return obj if condition is satisfied
# Return object if condition
RETIF -> MRET COND | COND COMMA MRET | RETIF COMMA RB RETIF | RETIF COMMA RB OBJ | MRET COMMA MRET COND


## Side effects
#       object is verbed to object | object verbed | object is verbed | obj is right shifted by n | Prints {some item} from source (and returns)
# SIDE -> OBJ VBZ MVB IN OBJ | OBJ VBZ MVB | OBJ VBZ MJJ MVB IN OBJ | VBZ TJJ OBJ IN OBJ CC MRET
# ASSIGN -> VBZ OBJ IN OBJ | VBZ OBJ TO OBJ | VBZ OBJ | VBZ DT OBJ | VBZ DT JJ OBJ

EVENT -> MNN VBD
# Object verbed - eg. `a` is negated, `a`
OBJV -> OBJ MVB | OBJ VBZ MVB

## Map POS tags from tokenizer
NN -> "NN"
NNS -> "NNS"
NNP -> "NNP"
NNPS -> "NNPS"

VB -> "VB"
VBP -> "VBP"
VBZ -> "VBZ"
VBN -> "VBN"
VBG -> "VBG"
VBD -> "VBD"

JJ -> "JJ"
JJR -> "JJR"
JJS -> "JJS"

RB -> "RB"

PRP -> "PRP"
DT -> "DT"
IN -> "IN"
CC -> "CC"
MD -> "MD"
TO -> "TO"

## Custom POS tags
RET -> "RET"
CODE -> "CODE"
LIT -> "LIT"
IF -> "IF"
FOR -> "FOR"
ARITH -> "ARITH"
SHIFT -> "SHIFT"

# Compatibility with CFG format
DOT -> "DOT"
COMMA -> "COMMA"
EXCL -> "EXCL"


## TODO: Tokens which are not currently supported
# "POS": 's "PRP$" its "PDT" all
# Support for links in item
# WDT -> "WDT"
# LRB -> "-LRB-"
# RRB -> "-RRB-"
# HYPH -> "HYPH"
# CD -> "CD"
# X -> ":" | "WRB" | "WP" | "NFP" | "FW" | "XX" | "SYM" | "RBR" | "POS" | "PRP$" | "PDT" | "UH" | "LS" | "ADD" | "RP" | "``" | "''" | "$"
STR -> "STR"
CHAR -> "CHAR"
# swap a, b

#            _u??          _i??       _f??       xx        xx.
# LIT_NUM -> LIT_UNUM | LIT_INUM | LIT_FNUM | LIT_INT | LIT_FLOAT
# LIT_UNUM -> LIT_u8 | LIT_u16 | LIT_u32 | LIT_u64 | LIT_u128 | LIT_usize
# LIT_INUM -> LIT_i8 | LIT_i16 | LIT_i32 | LIT_i64 | LIT_i128 | LIT_isize
# LIT_FNUM -> LIT_f32 | LIT_f64
#
# LIT -> LIT_BOOL | LIT_NUM | LIT_STR | LIT_CHAR
# IDENT -> "ident"