JS -> RETIF | IFRET | ASSERT | HASSERT | UHASSERT | FOREACH

OBJ -> PRP | DT NN | CODE | LIT
REL -> JJR IN OBJ | JJ EQTO OBJ | JJR EQTO OBJ | JJ IN OBJ
EQTO -> IN CC JJ IN
PROP -> VBP JJ | VBZ JJ | VBZ MREL | VBZ LIT | VB MREL
MJJ -> RB JJ | JJ
MREL -> RB REL | REL
ASSERT -> OBJ PROP
HASSERT -> OBJ MD PROP
UHASSERT -> FOREACH COMMA HASSERT | FOREACH HASSERT
PRED -> IN ASSERT | IFF ASSERT
IFF -> IN CC RB IN
EXIST -> OBJ IN DT OBJ
EPRED -> IN EXIST | IFF EXIST
RETIF -> RET OBJ PRED | RET OBJ EPRED
IFRET -> PRED RET OBJ | EPRED RET OBJ | PRED COMMA RET OBJ | EPRED COMMA RET OBJ
RANGE -> NN OBJ IN OBJ IN OBJ
FOREACH -> FOR EACH RANGE | FOR EACH RANGE COMMA JJ | FOR EACH RANGE JJ
#          for each index `i` from 0 to `self.len()`
PRP -> "PRP"
DT -> "DT"
NN -> "NN"
CODE -> "CODE"
JJR -> "JJR"
IN -> "IN"
VBP -> "VBP"
VBZ -> "VBZ"
JJ -> "JJ"
CC -> "CC"
RB -> "RB"
RET -> "RET"
LIT -> "LIT"
DOT -> "."
COMMA -> ","
MD -> "MD"
VB -> "VB"
FOR -> "FOR"
EACH -> "EACH"